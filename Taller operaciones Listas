# ===========================================
# By: Nury Farelo - Estructuras Datos
# Name: Lista Simplemente Enlazada 
# ===========================================

# Clase Nodo
class Nodo:
	def __init__(self, data):
		self.data = data
		self.siguiente = None

# CLase Listas enlazada simple
class ListaSE:
	def __init__(self):
		self.cabeza = None
  
  	# Lista Vacia
	def vacio(self):
		if self.cabeza == None:
			print("Est√° vacia")
		else:
			print("Lista no vacia")

	# Agregar al inicio
	def agregarInicio(self, data):
		nuevo_nodo = Nodo(data)
		if self.cabeza is None:
			self.cabeza = nuevo_nodo
			return
		else:
			nuevo_nodo.siguiente = self.cabeza
			self.cabeza = nuevo_nodo

    # Insertar al final
	def agregarFinal(self, data):
		nuevo_nodo = Nodo(data)
		if self.cabeza is None:
			self.cabeza = nuevo_nodo
			return

		nodo_actual = self.cabeza
		while(nodo_actual.siguiente):
			nodo_actual = nodo_actual.siguiente

		nodo_actual.siguiente = nuevo_nodo

# Eliminar el primero

	def eliminarPrimero(self):
		if(self.cabeza == None):
			return

		self.cabeza = self.cabeza.siguiente

	# Eliminar el ultimo
	def eliminar_ultimo(self):

		if self.cabeza is None:
			return

		nodo_actual = self.cabeza
		while(nodo_actual.siguiente.siguiente):
			nodo_actual = nodo_actual.siguiente

		nodo_actual.siguiente = None

		# Insertar antes de un elemento X 
    def InserarAntesX(self,data,X):
	    nuevo_nodo = Nodo(data) 
		nuevo_nodo.dato = int(X)
		if self.cabeza is None:
			nuevo_nodo.siguiente = self.cabeza
			self.cabeza = nuevo_nodo
			return
		
		nodo_actual = self.cabeza
		while(nodo_actual.siguiente):
			nodo_actual = nodo_actual.siguiente

	    if (nodo_actual.siguiente):
			nuevo_nodo.siguiente =nodo_actual.siguiente
			nodo_actual = nuevo_nodo


	def imprimir(self):
		nodo_actual = self.cabeza
		while(nodo_actual):
			print(nodo_actual.data)
			nodo_actual = nodo_actual.siguiente

print(f"nuevo_nodo")
